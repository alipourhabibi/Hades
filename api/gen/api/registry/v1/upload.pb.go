// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: api/registry/v1/upload.proto

package registryv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadRequestContent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ModuleRef        *ModuleRef             `protobuf:"bytes,1,opt,name=module_ref,json=moduleRef,proto3" json:"module_ref,omitempty"`
	Files            []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	SourceControlUrl string                 `protobuf:"bytes,3,opt,name=source_control_url,json=sourceControlUrl,proto3" json:"source_control_url,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UploadRequestContent) Reset() {
	*x = UploadRequestContent{}
	mi := &file_api_registry_v1_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequestContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequestContent) ProtoMessage() {}

func (x *UploadRequestContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_registry_v1_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequestContent.ProtoReflect.Descriptor instead.
func (*UploadRequestContent) Descriptor() ([]byte, []int) {
	return file_api_registry_v1_upload_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequestContent) GetModuleRef() *ModuleRef {
	if x != nil {
		return x.ModuleRef
	}
	return nil
}

func (x *UploadRequestContent) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *UploadRequestContent) GetSourceControlUrl() string {
	if x != nil {
		return x.SourceControlUrl
	}
	return ""
}

type UploadRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Contents      []*UploadRequestContent `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
	DepCommitIds  []string                `protobuf:"bytes,2,rep,name=dep_commit_ids,json=depCommitIds,proto3" json:"dep_commit_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_api_registry_v1_upload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_registry_v1_upload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_api_registry_v1_upload_proto_rawDescGZIP(), []int{1}
}

func (x *UploadRequest) GetContents() []*UploadRequestContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *UploadRequest) GetDepCommitIds() []string {
	if x != nil {
		return x.DepCommitIds
	}
	return nil
}

var File_api_registry_v1_upload_proto protoreflect.FileDescriptor

var file_api_registry_v1_upload_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x68, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x68, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x12, 0x31, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68,
	0x61, 0x64, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x55, 0x72, 0x6c, 0x22, 0x7e,
	0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x73, 0x42, 0xe2,
	0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x69, 0x70, 0x6f, 0x75, 0x72, 0x68,
	0x61, 0x62, 0x69, 0x62, 0x69, 0x2f, 0x48, 0x61, 0x64, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x48, 0x41, 0x52, 0xaa, 0x02, 0x15, 0x48, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x48,
	0x61, 0x64, 0x65, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x21, 0x48, 0x61, 0x64, 0x65, 0x73, 0x5c, 0x41, 0x70, 0x69,
	0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x48, 0x61, 0x64, 0x65, 0x73,
	0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_registry_v1_upload_proto_rawDescOnce sync.Once
	file_api_registry_v1_upload_proto_rawDescData = file_api_registry_v1_upload_proto_rawDesc
)

func file_api_registry_v1_upload_proto_rawDescGZIP() []byte {
	file_api_registry_v1_upload_proto_rawDescOnce.Do(func() {
		file_api_registry_v1_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_registry_v1_upload_proto_rawDescData)
	})
	return file_api_registry_v1_upload_proto_rawDescData
}

var file_api_registry_v1_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_registry_v1_upload_proto_goTypes = []any{
	(*UploadRequestContent)(nil), // 0: hades.api.registry.v1.UploadRequestContent
	(*UploadRequest)(nil),        // 1: hades.api.registry.v1.UploadRequest
	(*ModuleRef)(nil),            // 2: hades.api.registry.v1.ModuleRef
	(*File)(nil),                 // 3: hades.api.registry.v1.File
}
var file_api_registry_v1_upload_proto_depIdxs = []int32{
	2, // 0: hades.api.registry.v1.UploadRequestContent.module_ref:type_name -> hades.api.registry.v1.ModuleRef
	3, // 1: hades.api.registry.v1.UploadRequestContent.files:type_name -> hades.api.registry.v1.File
	0, // 2: hades.api.registry.v1.UploadRequest.contents:type_name -> hades.api.registry.v1.UploadRequestContent
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_registry_v1_upload_proto_init() }
func file_api_registry_v1_upload_proto_init() {
	if File_api_registry_v1_upload_proto != nil {
		return
	}
	file_api_registry_v1_download_proto_init()
	file_api_registry_v1_module_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_registry_v1_upload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_registry_v1_upload_proto_goTypes,
		DependencyIndexes: file_api_registry_v1_upload_proto_depIdxs,
		MessageInfos:      file_api_registry_v1_upload_proto_msgTypes,
	}.Build()
	File_api_registry_v1_upload_proto = out.File
	file_api_registry_v1_upload_proto_rawDesc = nil
	file_api_registry_v1_upload_proto_goTypes = nil
	file_api_registry_v1_upload_proto_depIdxs = nil
}
